name: 构建和发布

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build-portable:
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 安装依赖
      run: npm ci
      
    - name: 构建便携版
      run: .\scripts\build-for-ci.bat
      
    - name: 检查构建结果
      run: |
        if (Test-Path "dist\portable") {
          Write-Host "✅ 便携版目录已创建"
          Get-ChildItem "dist\portable" | ForEach-Object { Write-Host "  - $($_.Name)" }
          
          # 检查关键文件
          if (Test-Path "dist\portable\app\node.exe") {
            $nodeSize = (Get-Item "dist\portable\app\node.exe").Length / 1MB
            Write-Host "✅ Node.js 可执行文件: $([math]::Round($nodeSize, 2)) MB"
          } else {
            Write-Host "❌ Node.js 可执行文件不存在"
            exit 1
          }
          
          if (Test-Path "dist\portable\app\server\index.js") {
            Write-Host "✅ 服务器文件存在"
          } else {
            Write-Host "❌ 服务器文件不存在"
            exit 1
          }
          
          if (Test-Path "dist\portable\start-tool.bat") {
            Write-Host "✅ 启动脚本存在"
          } else {
            Write-Host "❌ 启动脚本不存在"
            exit 1
          }
        } else {
          Write-Host "❌ 便携版目录不存在"
          exit 1
        }
        
    - name: 打包便携版
      run: |
        Compress-Archive -Path "dist\portable\*" -DestinationPath "LLM批处理工具-免安装版-${{ github.ref_name }}.zip" -Force
        if (Test-Path "LLM批处理工具-免安装版-${{ github.ref_name }}.zip") {
          $size = (Get-Item "LLM批处理工具-免安装版-${{ github.ref_name }}.zip").Length / 1MB
          Write-Host "✅ 打包完成，文件大小: $([math]::Round($size, 2)) MB"
        } else {
          Write-Host "❌ 打包失败"
          exit 1
        }
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: portable-build
        path: LLM批处理工具-免安装版-*.zip

  create-release:
    needs: build-portable
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 下载构建产物
      uses: actions/download-artifact@v4
      with:
        name: portable-build
        path: ./artifacts
        
    - name: 移动文件到根目录
      run: |
        mv ./artifacts/LLM批处理工具-免安装版-*.zip ./
        ls -la LLM批处理工具-免安装版-*.zip
        
    - name: 创建发布
      uses: softprops/action-gh-release@v1
      with:
        files: |
          LLM批处理工具-免安装版-*.zip
        body: |
          ## 🚀 LLM批处理工具 ${{ github.ref_name }}
          
          一个简单易用的AI批量处理工具，让您轻松处理大量数据！
          
          ### 📦 快速开始
          
          1. 下载 `LLM批处理工具-免安装版-${{ github.ref_name }}.zip`
          2. 解压到任意目录
          3. 双击 `start-tool.bat` 即可使用
          
          ### ✨ 主要功能
          
          - 📊 **批量处理文件** - 支持CSV、Excel、JSON格式
          - 🤖 **多种AI模型** - 兼容OpenAI、DeepSeek、阿里云百炼等
          - ⚡ **实时进度** - 可视化进度条，随时查看处理状态  
          - 🔄 **断点续传** - 意外中断后可继续处理
          - 🎨 **简洁界面** - 现代化设计，操作简单直观
          - 📱 **免安装** - 绿色便携，下载即用
          
          ### 💡 使用场景
          
          - 批量翻译文本内容
          - 数据分析和总结
          - 内容审核和分类
          - 文本格式转换
          - 其他AI批处理任务
          
          ### 📋 系统要求
          
          - Windows 10 或更新版本
          - 约 1GB 可用空间
          
          ### 📖 更多帮助
          
          - [使用教程](https://github.com/${{ github.repository }}/blob/main/README.md)
          - [常见问题](https://github.com/${{ github.repository }}/issues)
          
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # 如果权限不足，可以使用Personal Access Token
        # GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}